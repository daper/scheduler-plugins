nameOverride: ""
fullnameOverride: ""

image:
  repository: registry.k8s.io
  tag: ""                       # default is the chart appVersion

# allow User system:kube-scheduler to work with metrics and CRDs
# primary usage is to replace default-scheduler with custom one
useForKubeSchedulerUser: false

scheduler:
  enabled: false
  image: scheduler-plugins/kube-scheduler
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  leaderElect: false
  verbosity: 1
  qps: 50
  percentageOfNodesToScore: 0
  strategy:
    type: RollingUpdate
  resources: {}
    # limits:
    #   cpu: 1000m
    #   memory: 256Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  affinity: {}

controller:
  enabled: false
  image: scheduler-plugins/controller
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  strategy:
    type: RollingUpdate
  resources: {}
    # requests:
    #   cpu: 100m
    #   memory: 256Mi
  affinity: {}

priorityClassName: system-node-critical

tolerations: []

nodeSelector: {}

podAnnotations: {}

securityContext:
  privileged: false
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  capabilities:
    drop:
      - ALL

plugins:
  score:
    disabled:
      - name: NodeResourcesBalancedAllocation
      - name: NodeResourcesLeastAllocated
    enabled:
      - name: TargetLoadPacking
        weight: 1

pluginConfig:
  - name: RequestedToCapacityRatio
    args:
      shape:
        - utilization: 0
          score: 0
        - utilization: 100
          score: 10
      resources:
        - name: nvidia.com/gpu
          weight: 5
  - name: TargetLoadPacking
    args:
      defaultRequests:
        cpu: "100m"
      defaultRequestsMultiplier: "2"
      targetUtilization: 80
      # metricProvider: # By default, `metricProviderType` is `KubernetesMetricsServer`
      #   type: Prometheus
      #   address: http://prometheus-k8s.monitoring.svc.cluster.local:9090
